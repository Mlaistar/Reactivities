{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mlaistar\\\\source\\\\vs_code\\\\Reactivities\\\\client-app\\\\src\\\\app\\\\layout\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashoard';\nimport LoadingComponent from './LoadingComponent';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\nimport { Route } from 'react-router-dom';\nimport HomePage from '../../features/activities/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    activityStore\n  } = useStore();\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]); // function handleDeleteActivity(id: string) {\n  //   setSubmitting(true);\n  //   agent.Activities.delete(id).then(() => {\n  //     setActivities([...activities.filter(x=>x.id!==id)]);\n  //     setSubmitting(false);\n  //   })\n  // }\n  // function handleCreateOrEditActivity(activity: Activity) {\n  //   setSubmitting(true);\n  //   if(activity.id){\n  //     agent.Activities.update(activity).then(() => {\n  //       setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n  //       setSelectedActivity(activity);\n  //       setEditMode(false);\n  //       setSubmitting(false);\n  //     })\n  //   }\n  //   else {\n  //     activity.id = uuid();\n  //       agent.Activities.create(activity).then(() => {\n  //       setActivities([...activities, activity]);  \n  //       setSelectedActivity(activity);\n  //       setEditMode(false);\n  //       setSubmitting(false);\n  //     })\n  //   }\n  // activity.id \n  // ? setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n  // : setActivities([...activities, {...activity, id: uuid()}]);\n  // setEditMode(false);\n  // setSelectedActivity(activity);\n  //}\n\n  if (activityStore.loadingInitial) return /*#__PURE__*/_jsxDEV(LoadingComponent, {\n    content: \"Loading app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 44\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: '7em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: HomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/activities\",\n        component: ActivityDashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/createActivity\",\n        component: ActivityForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"kW2VtRmnNl4duoZ5BLo2TUl0XOk=\", false, function () {\n  return [useStore];\n});\n\n_c = App;\nexport default _c2 = observer(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Mlaistar/source/vs_code/Reactivities/client-app/src/app/layout/App.tsx"],"names":["React","useEffect","Container","NavBar","ActivityDashboard","LoadingComponent","useStore","observer","Route","HomePage","ActivityForm","App","activityStore","loadActivities","loadingInitial","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAqBN,QAAQ,EAAnC;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,aAAa,CAACC,cAAd;AACH,GAFQ,EAEN,CAACD,aAAD,CAFM,CAAT,CAJa,CAQb;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AAEA;AACA;AACF;;AAEA,MAAGA,aAAa,CAACE,cAAjB,EAAkC,oBAAO,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AAElC,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAlB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEN;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAEL;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,iBAAZ;AAA8B,QAAA,SAAS,EAAEM;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADF;AAWD;;GAzDQC,G;UACoBL,Q;;;KADpBK,G;AA2DT,qBAAeJ,QAAQ,CAACI,GAAD,CAAvB","sourcesContent":["import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashoard';\nimport LoadingComponent from './LoadingComponent';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\nimport { Route } from 'react-router-dom';\nimport HomePage from '../../features/activities/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\n\nfunction App() {\n  const { activityStore } =  useStore();\n\n\n  useEffect(() => {\n      activityStore.loadActivities();\n  }, [activityStore])\n\n  // function handleDeleteActivity(id: string) {\n  //   setSubmitting(true);\n  //   agent.Activities.delete(id).then(() => {\n  //     setActivities([...activities.filter(x=>x.id!==id)]);\n  //     setSubmitting(false);\n  //   })\n    \n  // }\n\n  // function handleCreateOrEditActivity(activity: Activity) {\n  //   setSubmitting(true);\n  //   if(activity.id){\n  //     agent.Activities.update(activity).then(() => {\n  //       setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n  //       setSelectedActivity(activity);\n  //       setEditMode(false);\n  //       setSubmitting(false);\n  //     })\n  //   }\n  //   else {\n  //     activity.id = uuid();\n  //       agent.Activities.create(activity).then(() => {\n  //       setActivities([...activities, activity]);  \n  //       setSelectedActivity(activity);\n  //       setEditMode(false);\n  //       setSubmitting(false);\n  //     })\n  //   }\n    // activity.id \n    // ? setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n    // : setActivities([...activities, {...activity, id: uuid()}]);\n    \n    // setEditMode(false);\n    // setSelectedActivity(activity);\n  //}\n\n  if(activityStore.loadingInitial)  return <LoadingComponent content='Loading app' />\n\n  return (\n    <>\n      <NavBar />\n        <Container style={{marginTop: '7em'}}>\n            <Route path='/' component={HomePage} />\n            <Route path='/activities' component={ActivityDashboard} />\n            <Route path='/createActivity' component={ActivityForm} />\n            {/* <ActivityDashboard /> */}\n        </Container>\n    </>\n  );\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}