{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mlaistar\\\\source\\\\vs_code\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityDashoard.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetails from \"../folder/ActivityDetails\";\nimport ActivityForm from \"../form/ActivityForm\";\nimport ActivityList from \"./ActivityList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = observer(_c = _s(function ActivityDashboard() {\n  _s();\n\n  const {\n    activityStore\n  } = useStore();\n  const {\n    selectedActivity,\n    editMode\n  } = activityStore;\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]); // function handleDeleteActivity(id: string) {\n  //   setSubmitting(true);\n  //   agent.Activities.delete(id).then(() => {\n  //     setActivities([...activities.filter(x=>x.id!==id)]);\n  //     setSubmitting(false);\n  //   })\n  // }\n  // function handleCreateOrEditActivity(activity: Activity) {\n  //   setSubmitting(true);\n  //   if(activity.id){\n  //     agent.Activities.update(activity).then(() => {\n  //       setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n  //       setSelectedActivity(activity);\n  //       setEditMode(false);\n  //       setSubmitting(false);\n  //     })\n  //   }\n  //   else {\n  //     activity.id = uuid();\n  //       agent.Activities.create(activity).then(() => {\n  //       setActivities([...activities, activity]);  \n  //       setSelectedActivity(activity);\n  //       setEditMode(false);\n  //       setSubmitting(false);\n  //     })\n  //   }\n  // activity.id \n  // ? setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n  // : setActivities([...activities, {...activity, id: uuid()}]);\n  // setEditMode(false);\n  // setSelectedActivity(activity);\n  //}\n\n  if (activityStore.loadingInitial) return /*#__PURE__*/_jsxDEV(LoadingComponent, {\n    content: \"Loading app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 50\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: \"10\",\n      children: /*#__PURE__*/_jsxDEV(ActivityList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: \"6\",\n      children: [selectedActivity && !editMode && /*#__PURE__*/_jsxDEV(ActivityDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), editMode && /*#__PURE__*/_jsxDEV(ActivityForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}, \"zWI9dnFHH1zVkzTidHZjHXIOX9U=\", false, function () {\n  return [useStore];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$observer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Mlaistar/source/vs_code/Reactivities/client-app/src/features/activities/dashboard/ActivityDashoard.tsx"],"names":["observer","React","useEffect","Grid","LoadingComponent","useStore","ActivityDetails","ActivityForm","ActivityList","ActivityDashboard","activityStore","selectedActivity","editMode","loadActivities","loadingInitial"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,qBAAeR,QAAQ,SAAC,SAASS,iBAAT,GAA8B;AAAA;;AAE9C,QAAM;AAACC,IAAAA;AAAD,MAAkBL,QAAQ,EAAhC;AACA,QAAM;AAACM,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,MAA+BF,aAArC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,aAAa,CAACG,cAAd;AACH,GAFQ,EAEN,CAACH,aAAD,CAFM,CAAT,CAL8C,CAS9C;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AAEA;AACA;AACF;;AAEA,MAAGA,aAAa,CAACI,cAAjB,EAAkC,oBAAO,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AAEtC,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,IAAnB;AAAA,6BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,GAAnB;AAAA,iBACKH,gBAAgB,IAAI,CAACC,QAArB,iBACD,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGiBA,QAAQ,iBACrB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA5DsB;AAAA,UAESP,QAFT;AAAA,GAAvB","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetails from \"../folder/ActivityDetails\";\r\nimport ActivityForm from \"../form/ActivityForm\";\r\nimport ActivityList from \"./ActivityList\";\r\n\r\n\r\nexport default observer(function ActivityDashboard () {\r\n\r\n        const {activityStore} = useStore();\r\n        const {selectedActivity, editMode} = activityStore;\r\n\r\n        useEffect(() => {\r\n            activityStore.loadActivities();\r\n        }, [activityStore])\r\n      \r\n        // function handleDeleteActivity(id: string) {\r\n        //   setSubmitting(true);\r\n        //   agent.Activities.delete(id).then(() => {\r\n        //     setActivities([...activities.filter(x=>x.id!==id)]);\r\n        //     setSubmitting(false);\r\n        //   })\r\n          \r\n        // }\r\n      \r\n        // function handleCreateOrEditActivity(activity: Activity) {\r\n        //   setSubmitting(true);\r\n        //   if(activity.id){\r\n        //     agent.Activities.update(activity).then(() => {\r\n        //       setActivities([...activities.filter(x=>x.id!==activity.id), activity])\r\n        //       setSelectedActivity(activity);\r\n        //       setEditMode(false);\r\n        //       setSubmitting(false);\r\n        //     })\r\n        //   }\r\n        //   else {\r\n        //     activity.id = uuid();\r\n        //       agent.Activities.create(activity).then(() => {\r\n        //       setActivities([...activities, activity]);  \r\n        //       setSelectedActivity(activity);\r\n        //       setEditMode(false);\r\n        //       setSubmitting(false);\r\n        //     })\r\n        //   }\r\n          // activity.id \r\n          // ? setActivities([...activities.filter(x=>x.id!==activity.id), activity])\r\n          // : setActivities([...activities, {...activity, id: uuid()}]);\r\n          \r\n          // setEditMode(false);\r\n          // setSelectedActivity(activity);\r\n        //}\r\n      \r\n        if(activityStore.loadingInitial)  return <LoadingComponent content='Loading app' />\r\n      \r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                <ActivityList />\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                {selectedActivity && !editMode &&\r\n                <ActivityDetails />}\r\n                            {editMode && \r\n                <ActivityForm />}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}