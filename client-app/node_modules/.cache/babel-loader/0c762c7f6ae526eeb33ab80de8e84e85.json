{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mlaistar\\\\source\\\\vs_code\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\form\\\\ActivityForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = observer(_c = _s(function ActivityForm() {\n  _s();\n\n  const {\n    activityStore\n  } = useStore();\n  const {\n    selectedActivity,\n    closeForm,\n    createActivity,\n    updateActivity,\n    loading\n  } = activityStore;\n  const initialState = selectedActivity !== null && selectedActivity !== void 0 ? selectedActivity : {\n    id: '',\n    title: '',\n    category: '',\n    description: '',\n    date: '',\n    city: '',\n    venue: ''\n  };\n  const [activity, setActivity] = useState(initialState);\n\n  function handleSubmit() {\n    activity.id ? updateActivity(activity) : createActivity(activity);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setActivity({ ...activity,\n      [name]: value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    clearing: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        placeholder: \"Title\",\n        value: activity.title,\n        name: \"title\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n        placeholder: \"Description\",\n        value: activity.description,\n        name: \"description\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        placeholder: \"Category\",\n        value: activity.category,\n        name: \"category\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        type: \"date\",\n        placeholder: \"Date\",\n        value: activity.date,\n        name: \"date\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        placeholder: \"City\",\n        value: activity.city,\n        name: \"city\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        placeholder: \"Venue\",\n        value: activity.venue,\n        name: \"venue\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        loading: loading,\n        floated: \"right\",\n        positive: true,\n        type: \"submit\",\n        content: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: closeForm,\n        floated: \"right\",\n        type: \"button\",\n        content: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}, \"GnvXBCN+NNAQP9aljycg7ZwRHZQ=\", false, function () {\n  return [useStore];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$observer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Mlaistar/source/vs_code/Reactivities/client-app/src/features/activities/form/ActivityForm.tsx"],"names":["observer","React","useState","Button","Form","Segment","useStore","ActivityForm","activityStore","selectedActivity","closeForm","createActivity","updateActivity","loading","initialState","id","title","category","description","date","city","venue","activity","setActivity","handleSubmit","handleInputChange","event","name","value","target"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { Button, Form, Segment } from \"semantic-ui-react\";\r\n\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityForm() {\r\n\r\n    const {activityStore} = useStore();\r\n    const {selectedActivity, closeForm, createActivity, updateActivity, loading} = activityStore;\r\n    \r\n    const initialState = selectedActivity ?? {\r\n        id: '',\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        date: '',\r\n        city: '',\r\n        venue: ''\r\n    }\r\n\r\n    const [activity, setActivity] = useState(initialState);\r\n\r\n    function handleSubmit() {\r\n        activity.id ? updateActivity(activity) : createActivity(activity);\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        const {name, value} = event.target;\r\n        setActivity({...activity, [name]: value});\r\n    }\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Form onSubmit={handleSubmit} autoComplete='off'>\r\n                <Form.Input placeholder='Title' value={activity.title} name='title' onChange={handleInputChange} />\r\n                <Form.TextArea placeholder='Description' value={activity.description} name='description' onChange={handleInputChange} />\r\n                <Form.Input placeholder='Category' value={activity.category} name='category' onChange={handleInputChange} />\r\n                <Form.Input type='date' placeholder='Date' value={activity.date} name='date' onChange={handleInputChange} />\r\n                <Form.Input placeholder='City' value={activity.city} name='city' onChange={handleInputChange} />\r\n                <Form.Input placeholder='Venue' value={activity.venue} name='venue' onChange={handleInputChange} />\r\n                <Button loading={loading} floated='right' positive type='submit' content='Submit' />\r\n                <Button onClick={closeForm} floated='right' type='button' content='Cancel' />\r\n            </Form>\r\n        </Segment>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}