{"ast":null,"code":"import axios from 'axios';\n\nconst sleep = delay => {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = 'http://localhost:5000/api';\naxios.interceptors.response.use(async response => {\n  try {\n    await sleep(1000);\n    return response;\n  } catch (error) {\n    console.log(error);\n    return await Promise.reject(error);\n  } // sleep(1000).then(()=> {\n  //     return response;\n  // }).catch((error) => {\n  //     console.log(error);\n  //     return Promise.reject(error);\n  // })\n\n});\n\nconst responseBody = response => response.data;\n\nconst requests = {\n  get: url => axios.get(url).then(responseBody),\n  post: (url, body) => axios.post(url, body).then(responseBody),\n  put: (url, body) => axios.put(url, body).then(responseBody),\n  del: url => axios.delete(url).then(responseBody)\n};\nconst Activities = {\n  list: () => requests.get('/activities'),\n  details: id => requests.get(`/activities/${id}`),\n  create: activity => axios.post('/activities', activity),\n  update: activity => axios.put(`/activities/${activity.id}`, activity),\n  delete: id => axios.delete(`/activities/${id}`)\n};\nconst agent = {\n  Activities\n};\nexport default agent;","map":{"version":3,"sources":["C:/Users/Mlaistar/source/vs_code/Reactivities/client-app/src/app/api/agent.ts"],"names":["axios","sleep","delay","Promise","resolve","setTimeout","defaults","baseURL","interceptors","response","use","error","console","log","reject","responseBody","data","requests","get","url","then","post","body","put","del","delete","Activities","list","details","id","create","activity","update","agent"],"mappings":"AACA,OAAOA,KAAP,MAAqC,OAArC;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAmB;AAC7B,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,KAAV,CAAV;AACH,GAFM,CAAP;AAGH,CAJD;;AAMAF,KAAK,CAACM,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;AAEAP,KAAK,CAACQ,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,MAAMD,QAAN,IAAkB;AAC9C,MAAI;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,WAAOQ,QAAP;AACH,GAHD,CAGE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,MAAMR,OAAO,CAACW,MAAR,CAAeH,KAAf,CAAb;AACH,GAP6C,CAQ9C;AACA;AACA;AACA;AACA;AACA;;AACH,CAdD;;AAgBA,MAAMI,YAAY,GAAQN,QAAL,IAAoCA,QAAQ,CAACO,IAAlE;;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,GAAG,EAAOC,GAAL,IAAqBnB,KAAK,CAACkB,GAAN,CAAaC,GAAb,EAAkBC,IAAlB,CAAuBL,YAAvB,CADb;AAEbM,EAAAA,IAAI,EAAE,CAAKF,GAAL,EAAkBG,IAAlB,KAA+BtB,KAAK,CAACqB,IAAN,CAAcF,GAAd,EAAmBG,IAAnB,EAAyBF,IAAzB,CAA8BL,YAA9B,CAFxB;AAGbQ,EAAAA,GAAG,EAAE,CAAKJ,GAAL,EAAkBG,IAAlB,KAA+BtB,KAAK,CAACuB,GAAN,CAAaJ,GAAb,EAAkBG,IAAlB,EAAwBF,IAAxB,CAA6BL,YAA7B,CAHvB;AAIbS,EAAAA,GAAG,EAAOL,GAAL,IAAqBnB,KAAK,CAACyB,MAAN,CAAgBN,GAAhB,EAAqBC,IAArB,CAA0BL,YAA1B;AAJb,CAAjB;AAOA,MAAMW,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE,MAAMV,QAAQ,CAACC,GAAT,CAAyB,aAAzB,CADG;AAEfU,EAAAA,OAAO,EAAGC,EAAD,IAAgBZ,QAAQ,CAACC,GAAT,CAAwB,eAAcW,EAAG,EAAzC,CAFV;AAGfC,EAAAA,MAAM,EAAGC,QAAD,IAAwB/B,KAAK,CAACqB,IAAN,CAAiB,aAAjB,EAAgCU,QAAhC,CAHjB;AAIfC,EAAAA,MAAM,EAAGD,QAAD,IAAwB/B,KAAK,CAACuB,GAAN,CAAW,eAAcQ,QAAQ,CAACF,EAAG,EAArC,EAAwCE,QAAxC,CAJjB;AAKfN,EAAAA,MAAM,EAAGI,EAAD,IAAgB7B,KAAK,CAACyB,MAAN,CAAc,eAAcI,EAAG,EAA/B;AALT,CAAnB;AAQA,MAAMI,KAAK,GAAG;AACVP,EAAAA;AADU,CAAd;AAKA,eAAeO,KAAf","sourcesContent":["import { Activity } from './../models/activity';\r\nimport axios, { AxiosResponse } from 'axios';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.response.use(async response => {\r\n    try {\r\n        await sleep(1000);\r\n        return response;\r\n    } catch(error) {\r\n        console.log(error);\r\n        return await Promise.reject(error);\r\n    }\r\n    // sleep(1000).then(()=> {\r\n    //     return response;\r\n    // }).catch((error) => {\r\n    //     console.log(error);\r\n    //     return Promise.reject(error);\r\n    // })\r\n})\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T> (url: string) => axios.delete<T>(url).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: () => requests.get<Activity[]>('/activities'),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: Activity) => axios.post<void>('/activities', activity),\r\n    update: (activity: Activity) => axios.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => axios.delete(`/activities/${id}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities\r\n}\r\n\r\n\r\nexport default agent;"]},"metadata":{},"sourceType":"module"}