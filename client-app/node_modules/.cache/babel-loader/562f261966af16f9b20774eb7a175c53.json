{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mlaistar\\\\source\\\\vs_code\\\\Reactivities\\\\client-app\\\\src\\\\app\\\\layout\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashoard';\nimport { v4 as uuid } from 'uuid';\nimport agent from '../api/agent';\nimport LoadingComponent from './LoadingComponent';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    activityStore\n  } = useStore();\n  const [activities, setActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState(undefined);\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]);\n\n  function handleDeleteActivity(id) {\n    setSubmitting(true);\n    agent.Activities.delete(id).then(() => {\n      setActivities([...activities.filter(x => x.id !== id)]);\n      setSubmitting(false);\n    });\n  }\n\n  function handleSelectActivity(id) {\n    setSelectedActivity(activities.find(x => x.id === id));\n  }\n\n  function handleCancelSelectActivity() {\n    setSelectedActivity(undefined);\n  }\n\n  function handleFormOpen(id) {\n    id ? handleSelectActivity(id) : handleCancelSelectActivity();\n    setEditMode(true);\n  }\n\n  function handleFormClose() {\n    setEditMode(false);\n  }\n\n  function handleCreateOrEditActivity(activity) {\n    setSubmitting(true);\n\n    if (activity.id) {\n      agent.Activities.update(activity).then(() => {\n        setActivities([...activities.filter(x => x.id !== activity.id), activity]);\n        setSelectedActivity(activity);\n        setEditMode(false);\n        setSubmitting(false);\n      });\n    } else {\n      activity.id = uuid();\n      agent.Activities.create(activity).then(() => {\n        setActivities([...activities, activity]);\n        setSelectedActivity(activity);\n        setEditMode(false);\n        setSubmitting(false);\n      });\n    } // activity.id \n    // ? setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n    // : setActivities([...activities, {...activity, id: uuid()}]);\n    // setEditMode(false);\n    // setSelectedActivity(activity);\n\n  }\n\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingComponent, {\n    content: \"Loading app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      openForm: handleFormOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: '7em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: activityStore.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Add exclamation!\",\n        positive: true,\n        onClick: activityStore.setTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActivityDashboard, {\n        activities: activities,\n        selectedActivity: selectedActivity,\n        selectActivity: handleSelectActivity,\n        cancelSelectActivity: handleCancelSelectActivity,\n        editMode: editMode,\n        openForm: handleFormOpen,\n        closeForm: handleFormClose,\n        createOrEdit: handleCreateOrEditActivity,\n        deleteActivity: handleDeleteActivity,\n        submitting: submitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"z3E4ggVcyJRegAVvP8LwiXb0MpE=\", false, function () {\n  return [useStore];\n});\n\n_c = App;\nexport default _c2 = observer(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Mlaistar/source/vs_code/Reactivities/client-app/src/app/layout/App.tsx"],"names":["React","useEffect","useState","Button","Container","NavBar","ActivityDashboard","v4","uuid","agent","LoadingComponent","useStore","observer","App","activityStore","activities","setActivities","selectedActivity","setSelectedActivity","undefined","editMode","setEditMode","loading","setLoading","submitting","setSubmitting","loadActivities","handleDeleteActivity","id","Activities","delete","then","filter","x","handleSelectActivity","find","handleCancelSelectActivity","handleFormOpen","handleFormClose","handleCreateOrEditActivity","activity","update","create","marginTop","title","setTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Container } from 'semantic-ui-react';\nimport { Activity } from '../models/activity';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashoard';\nimport { v4 as uuid } from 'uuid';\nimport agent from '../api/agent';\nimport LoadingComponent from './LoadingComponent';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\n\nfunction App() {\n  const { activityStore } =  useStore();\n\n  const [activities, setActivities] = useState<Activity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<Activity | undefined>(undefined);\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const[submitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n      activityStore.loadActivities();\n  }, [activityStore])\n\n  function handleDeleteActivity(id: string) {\n    setSubmitting(true);\n    agent.Activities.delete(id).then(() => {\n      setActivities([...activities.filter(x=>x.id!==id)]);\n      setSubmitting(false);\n    })\n    \n  }\n\n  function handleSelectActivity(id: string) {\n      setSelectedActivity(activities.find(x => x.id === id));\n  }\n\n  function handleCancelSelectActivity() {\n    setSelectedActivity(undefined);\n  }\n\n  function handleFormOpen(id?: string) {\n    id ? handleSelectActivity(id) : handleCancelSelectActivity();\n    setEditMode(true);\n\n  }\n\n  function handleFormClose() {\n    setEditMode(false);\n  }\n\n  function handleCreateOrEditActivity(activity: Activity) {\n    setSubmitting(true);\n    if(activity.id){\n      agent.Activities.update(activity).then(() => {\n        setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n        setSelectedActivity(activity);\n        setEditMode(false);\n        setSubmitting(false);\n      })\n    }\n    else {\n      activity.id = uuid();\n        agent.Activities.create(activity).then(() => {\n        setActivities([...activities, activity]);  \n        setSelectedActivity(activity);\n        setEditMode(false);\n        setSubmitting(false);\n      })\n    }\n    // activity.id \n    // ? setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n    // : setActivities([...activities, {...activity, id: uuid()}]);\n    \n    // setEditMode(false);\n    // setSelectedActivity(activity);\n  }\n\n  if(loading)  return <LoadingComponent content='Loading app' />\n\n  return (\n    <>\n      <NavBar openForm={handleFormOpen} />\n        <Container style={{marginTop: '7em'}}>\n          <h2>{activityStore.title}</h2>\n          <Button content='Add exclamation!' positive onClick={activityStore.setTitle} />\n            <ActivityDashboard \n            activities={activities}\n            selectedActivity={selectedActivity}\n            selectActivity={handleSelectActivity}\n            cancelSelectActivity={handleCancelSelectActivity}\n            editMode={editMode}\n            openForm={handleFormOpen}\n            closeForm={handleFormClose}\n            createOrEdit={handleCreateOrEditActivity} \n            deleteActivity={handleDeleteActivity}\n            submitting={submitting} />\n        </Container>\n    </>\n  );\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}