{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mlaistar\\\\source\\\\vs_code\\\\Reactivities\\\\client-app\\\\src\\\\app\\\\layout\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashoard';\nimport { v4 as uuid } from 'uuid';\nimport agent from '../api/agent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [activities, setActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState(undefined);\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    agent.Activities.list().then(response => {\n      let activities = [];\n      response.forEach(activity => {\n        activity.date = activity.date.split('T')[0];\n        activities.push(activity);\n      });\n      setActivities(activities);\n    });\n  }, []);\n\n  function handleDeleteActivity(id) {\n    setActivities([...activities.filter(x => x.id !== id)]);\n  }\n\n  function handleSelectActivity(id) {\n    setSelectedActivity(activities.find(x => x.id === id));\n  }\n\n  function handleCancelSelectActivity() {\n    setSelectedActivity(undefined);\n  }\n\n  function handleFormOpen(id) {\n    id ? handleSelectActivity(id) : handleCancelSelectActivity();\n    setEditMode(true);\n  }\n\n  function handleFormClose() {\n    setEditMode(false);\n  }\n\n  function handleCreateOrEditActivity(activity) {\n    activity.id ? setActivities([...activities.filter(x => x.id !== activity.id), activity]) : setActivities([...activities, { ...activity,\n      id: uuid()\n    }]);\n    setEditMode(false);\n    setSelectedActivity(activity);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      openForm: handleFormOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: '7em'\n      },\n      children: /*#__PURE__*/_jsxDEV(ActivityDashboard, {\n        activities: activities,\n        selectedActivity: selectedActivity,\n        selectActivity: handleSelectActivity,\n        cancelSelectActivity: handleCancelSelectActivity,\n        editMode: editMode,\n        openForm: handleFormOpen,\n        closeForm: handleFormClose,\n        createOrEdit: handleCreateOrEditActivity,\n        deleteActivity: handleDeleteActivity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"esCgemwa4KQyTC44HwCvgxvOmvE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Mlaistar/source/vs_code/Reactivities/client-app/src/app/layout/App.tsx"],"names":["React","useEffect","useState","Container","NavBar","ActivityDashboard","v4","uuid","agent","App","activities","setActivities","selectedActivity","setSelectedActivity","undefined","editMode","setEditMode","Activities","list","then","response","forEach","activity","date","split","push","handleDeleteActivity","id","filter","x","handleSelectActivity","find","handleCancelSelectActivity","handleFormOpen","handleFormClose","handleCreateOrEditActivity","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { Activity } from '../models/activity';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashoard';\nimport { v4 as uuid } from 'uuid';\nimport agent from '../api/agent';\n\nfunction App() {\n  const [activities, setActivities] = useState<Activity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<Activity | undefined>(undefined);\n  const [editMode, setEditMode] = useState(false);\n  \n\n  useEffect(() => {\n    agent.Activities.list()\n         .then(response => {\n          let activities: Activity[] = [];\n          response.forEach(activity => {\n            activity.date = activity.date.split('T')[0]\n            activities.push(activity);\n          })\n           setActivities(activities);\n        })\n  }, [])\n\n  function handleDeleteActivity(id: string) {\n    setActivities([...activities.filter(x=>x.id!==id)]);\n  }\n\n  function handleSelectActivity(id: string) {\n      setSelectedActivity(activities.find(x => x.id === id));\n  }\n\n  function handleCancelSelectActivity() {\n    setSelectedActivity(undefined);\n  }\n\n  function handleFormOpen(id?: string) {\n    id ? handleSelectActivity(id) : handleCancelSelectActivity();\n    setEditMode(true);\n\n  }\n\n  function handleFormClose() {\n    setEditMode(false);\n  }\n\n  function handleCreateOrEditActivity(activity: Activity) {\n    activity.id \n    ? setActivities([...activities.filter(x=>x.id!==activity.id), activity])\n    : setActivities([...activities, {...activity, id: uuid()}]);\n    \n    setEditMode(false);\n    setSelectedActivity(activity);\n  }\n\n  return (\n    <>\n      <NavBar openForm={handleFormOpen} />\n        <Container style={{marginTop: '7em'}}>\n            <ActivityDashboard \n            activities={activities}\n            selectedActivity={selectedActivity}\n            selectActivity={handleSelectActivity}\n            cancelSelectActivity={handleCancelSelectActivity}\n            editMode={editMode}\n            openForm={handleFormOpen}\n            closeForm={handleFormClose}\n            createOrEdit={handleCreateOrEditActivity} \n            deleteActivity={handleDeleteActivity} />\n        </Container>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}